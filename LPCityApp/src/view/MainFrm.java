/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseListener;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.JButton;
import javax.swing.JInternalFrame;
import javax.swing.Timer;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;
import net.glxn.qrgen.QRCode;
import net.glxn.qrgen.image.ImageType;
import xhelper.Auth;
import xhelper.ImageHelper;
import xhelper.MyMess;

/**
 *
 * @author NTV
 */
public class MainFrm extends javax.swing.JFrame {

    private HelloScreenFrm hello;
    private HomeFrm homeFrm;
    private LogInFrm logInFrm;
    private ChangePassFrm changeFrm;
    private QLCDFrm qLCDFrm;
    private QLHVFrm qLHVFrm;
    private QLKHFrm qLKHFrm;
    private QLNHFrm qLNHFrm;
    private QLNVFrm qLNVFrm;
    private ForgotPassFrm frmForgot;
    private StatisticalFrm frmStatis;
    private InfoFrm frmInfo;
    private QRCodeFrm frmQR;

    /**
     * Creates new form MainFrm
     */
    public MainFrm() {
        initComponents();
//        setLocationRelativeTo(this);
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize(screenSize.width, screenSize.height);
////        setResizable(false);

        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        dpMain = new javax.swing.JDesktopPane();
        jPanel3 = new javax.swing.JPanel();
        lblRule = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnQLNhanVien = new javax.swing.JButton();
        btnQLCD = new javax.swing.JButton();
        btnQLHV = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        btnQLKH = new javax.swing.JButton();
        btnQLNH = new javax.swing.JButton();
        btnBCTK = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        lblClock = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        jSeparator12 = new javax.swing.JSeparator();
        MnuBar = new javax.swing.JMenuBar();
        MnuHeThong = new javax.swing.JMenu();
        mnuLogout = new javax.swing.JMenuItem();
        jSeparator11 = new javax.swing.JPopupMenu.Separator();
        mnuQR = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnuChangePass = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mnuExit = new javax.swing.JMenuItem();
        mnuQuanLy = new javax.swing.JMenu();
        mnuCD = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        mnuKH = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        mnuNH = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        mnuHV = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        mnuNV = new javax.swing.JMenuItem();
        mnuThongKe = new javax.swing.JMenu();
        mnuBD = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        mnuLuNH = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        mnuDCD = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        mnuDT = new javax.swing.JMenuItem();
        MnuTroGiup = new javax.swing.JMenu();
        mnuHuongDan = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JPopupMenu.Separator();
        mnuGioiThieu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("The Dark Knight");
        setAlwaysOnTop(true);
        setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        setPreferredSize(new java.awt.Dimension(1083, 702));
        setResizable(false);

        jPanel4.setPreferredSize(new java.awt.Dimension(503, 410));
        jPanel4.setLayout(new java.awt.BorderLayout());

        dpMain.setPreferredSize(new java.awt.Dimension(503, 410));

        javax.swing.GroupLayout dpMainLayout = new javax.swing.GroupLayout(dpMain);
        dpMain.setLayout(dpMainLayout);
        dpMainLayout.setHorizontalGroup(
            dpMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 983, Short.MAX_VALUE)
        );
        dpMainLayout.setVerticalGroup(
            dpMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 452, Short.MAX_VALUE)
        );

        jPanel4.add(dpMain, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel4, java.awt.BorderLayout.CENTER);

        jPanel3.setMinimumSize(new java.awt.Dimension(375, 142));
        jPanel3.setPreferredSize(new java.awt.Dimension(509, 70));
        jPanel3.setLayout(new java.awt.BorderLayout(15, 0));

        lblRule.setBackground(new java.awt.Color(255, 255, 255));
        lblRule.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblRule.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/information (1).png"))); // NOI18N
        lblRule.setText("Hệ quản lý đào tạo");
        lblRule.setMinimumSize(new java.awt.Dimension(0, 2));
        jPanel3.add(lblRule, java.awt.BorderLayout.WEST);

        jPanel1.setMinimumSize(new java.awt.Dimension(0, 3));
        jPanel1.setPreferredSize(new java.awt.Dimension(205, 41));
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        btnQLNhanVien.setBackground(new java.awt.Color(255, 255, 255));
        btnQLNhanVien.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnQLNhanVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/login32.png"))); // NOI18N
        btnQLNhanVien.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnQLNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLNhanVienActionPerformed(evt);
            }
        });
        jPanel1.add(btnQLNhanVien);

        btnQLCD.setBackground(new java.awt.Color(255, 255, 255));
        btnQLCD.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnQLCD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/list32.png"))); // NOI18N
        btnQLCD.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnQLCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLCDActionPerformed(evt);
            }
        });
        jPanel1.add(btnQLCD);

        btnQLHV.setBackground(new java.awt.Color(255, 255, 255));
        btnQLHV.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnQLHV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/student (32).png"))); // NOI18N
        btnQLHV.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnQLHV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLHVActionPerformed(evt);
            }
        });
        jPanel1.add(btnQLHV);

        btnHome.setBackground(new java.awt.Color(255, 255, 255));
        btnHome.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/home 32.png"))); // NOI18N
        btnHome.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });
        jPanel1.add(btnHome);

        btnQLKH.setBackground(new java.awt.Color(255, 255, 255));
        btnQLKH.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnQLKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/training (32).png"))); // NOI18N
        btnQLKH.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnQLKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLKHActionPerformed(evt);
            }
        });
        jPanel1.add(btnQLKH);

        btnQLNH.setBackground(new java.awt.Color(255, 255, 255));
        btnQLNH.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnQLNH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/employee32.png"))); // NOI18N
        btnQLNH.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnQLNH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQLNHActionPerformed(evt);
            }
        });
        jPanel1.add(btnQLNH);

        btnBCTK.setBackground(new java.awt.Color(255, 255, 255));
        btnBCTK.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        btnBCTK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/dashboard 32.png"))); // NOI18N
        btnBCTK.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBCTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBCTKActionPerformed(evt);
            }
        });
        jPanel1.add(btnBCTK);

        jPanel3.add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel2.setPreferredSize(new java.awt.Dimension(114, 50));
        jPanel2.setLayout(new java.awt.GridLayout(2, 0));

        lblClock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClock.setText("00:00 AM");
        lblClock.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel2.add(lblClock);
        lblClock.getAccessibleContext().setAccessibleParent(lblClock);

        lblDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDate.setText("18/02/2022");
        jPanel2.add(lblDate);

        jPanel3.add(jPanel2, java.awt.BorderLayout.EAST);
        jPanel3.add(jSeparator12, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        MnuBar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        MnuBar.setMargin(new java.awt.Insets(0, 10, 0, 10));
        MnuBar.setPreferredSize(new java.awt.Dimension(310, 50));

        MnuHeThong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/system.png"))); // NOI18N
        MnuHeThong.setText("Hệ thống");
        MnuHeThong.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        MnuHeThong.setMargin(new java.awt.Insets(0, 10, 0, 10));

        mnuLogout.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        mnuLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/log-in.png"))); // NOI18N
        mnuLogout.setText("Đăng Nhập");
        mnuLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuLogoutActionPerformed(evt);
            }
        });
        MnuHeThong.add(mnuLogout);
        MnuHeThong.add(jSeparator11);

        mnuQR.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        mnuQR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/qr.png"))); // NOI18N
        mnuQR.setText("Tạo Mã QR");
        mnuQR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuQRActionPerformed(evt);
            }
        });
        MnuHeThong.add(mnuQR);
        MnuHeThong.add(jSeparator1);

        mnuChangePass.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        mnuChangePass.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/password32.png"))); // NOI18N
        mnuChangePass.setText("Đổi mật khẩu");
        mnuChangePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuChangePassActionPerformed(evt);
            }
        });
        MnuHeThong.add(mnuChangePass);
        MnuHeThong.add(jSeparator2);

        mnuExit.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        mnuExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/failed.png"))); // NOI18N
        mnuExit.setText("Thoát");
        mnuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExitActionPerformed(evt);
            }
        });
        MnuHeThong.add(mnuExit);

        MnuBar.add(MnuHeThong);

        mnuQuanLy.setBorder(null);
        mnuQuanLy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/team.png"))); // NOI18N
        mnuQuanLy.setText("Quản lý");
        mnuQuanLy.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mnuQuanLy.setMargin(new java.awt.Insets(0, 10, 0, 10));

        mnuCD.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        mnuCD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/list (32).png"))); // NOI18N
        mnuCD.setText("Chuyên đề");
        mnuCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCDActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mnuCD);
        mnuQuanLy.add(jSeparator3);

        mnuKH.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        mnuKH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/training (32).png"))); // NOI18N
        mnuKH.setText("Khoá học");
        mnuKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuKHActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mnuKH);
        mnuQuanLy.add(jSeparator4);

        mnuNH.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        mnuNH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/employee32.png"))); // NOI18N
        mnuNH.setText("Người học");
        mnuNH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuNHActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mnuNH);
        mnuQuanLy.add(jSeparator5);

        mnuHV.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        mnuHV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/student (32).png"))); // NOI18N
        mnuHV.setText("Học viên");
        mnuHV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuHVActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mnuHV);
        mnuQuanLy.add(jSeparator6);

        mnuNV.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        mnuNV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/login32.png"))); // NOI18N
        mnuNV.setText("Nhân viên");
        mnuNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuNVActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mnuNV);

        MnuBar.add(mnuQuanLy);

        mnuThongKe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/dashboard 32.png"))); // NOI18N
        mnuThongKe.setText("Thống kê");
        mnuThongKe.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mnuThongKe.setMargin(new java.awt.Insets(0, 10, 0, 10));

        mnuBD.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        mnuBD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/checklist.png"))); // NOI18N
        mnuBD.setText("Bảng điểm");
        mnuBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuBDActionPerformed(evt);
            }
        });
        mnuThongKe.add(mnuBD);
        mnuThongKe.add(jSeparator7);

        mnuLuNH.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        mnuLuNH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/lNGH.png"))); // NOI18N
        mnuLuNH.setText("Lượng người học");
        mnuLuNH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuLuNHActionPerformed(evt);
            }
        });
        mnuThongKe.add(mnuLuNH);
        mnuThongKe.add(jSeparator8);

        mnuDCD.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        mnuDCD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/DCD.png"))); // NOI18N
        mnuDCD.setText("Điểm chuyên đề");
        mnuDCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuDCDActionPerformed(evt);
            }
        });
        mnuThongKe.add(mnuDCD);
        mnuThongKe.add(jSeparator9);

        mnuDT.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        mnuDT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/doanhthuts.png"))); // NOI18N
        mnuDT.setText("Doanh thu");
        mnuDT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuDTActionPerformed(evt);
            }
        });
        mnuThongKe.add(mnuDT);

        MnuBar.add(mnuThongKe);

        MnuTroGiup.setBorder(null);
        MnuTroGiup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/help-desk.png"))); // NOI18N
        MnuTroGiup.setText("Trợ giúp");
        MnuTroGiup.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        MnuTroGiup.setMargin(new java.awt.Insets(0, 10, 0, 10));

        mnuHuongDan.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        mnuHuongDan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/book.png"))); // NOI18N
        mnuHuongDan.setText("Hướng dẫn");
        mnuHuongDan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuHuongDanActionPerformed(evt);
            }
        });
        MnuTroGiup.add(mnuHuongDan);
        MnuTroGiup.add(jSeparator10);

        mnuGioiThieu.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        mnuGioiThieu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/information (1).png"))); // NOI18N
        mnuGioiThieu.setText("Giới thiệu");
        mnuGioiThieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuGioiThieuActionPerformed(evt);
            }
        });
        MnuTroGiup.add(mnuGioiThieu);

        MnuBar.add(MnuTroGiup);

        setJMenuBar(MnuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuHuongDanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuHuongDanActionPerformed
        String path = ".\\pages\\index.html";
        this.setAlwaysOnTop(false);
        try {
            Desktop.getDesktop().open(new File(path));
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_mnuHuongDanActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        closeAllFrm();
        this.setAlwaysOnTop(true);
        if (homeFrm == null || homeFrm.isClosed()) {
            homeFrm = new HomeFrm();
            homeFrm.addInternalFrameListener(new InternalFrameListener() {
                @Override
                public void internalFrameOpened(InternalFrameEvent e) {
                }

                @Override
                public void internalFrameClosing(InternalFrameEvent e) {

                }

                @Override
                public void internalFrameClosed(InternalFrameEvent e) {

//                    if (mnuLogout.getText().equals("Đăng Nhập")) {
//                        Auth.nguoiDungHienTai = null;
//                    }
//                    statusBtn();
                    switch (HomeFrm.home) {
                        case 1:
                            mnuLogout.setText("Đăng Nhập");
                            mnuLogoutActionPerformed(null);
                            HomeFrm.home = 0;
                            break;
                        case 2:
                            mnuChangePassActionPerformed(null);
                            HomeFrm.home = 0;
                            break;
                        case 4:
                            mnuGioiThieuActionPerformed(null);
                            HomeFrm.home = 0;
                            break;
                        case 5:
                            mnuHuongDanActionPerformed(null);
                            HomeFrm.home = 0;
                            break;
                        default:
                            break;
                    }
                }

                @Override
                public void internalFrameIconified(InternalFrameEvent e) {
                }

                @Override
                public void internalFrameDeiconified(InternalFrameEvent e) {
                }

                @Override
                public void internalFrameActivated(InternalFrameEvent e) {
                }

                @Override
                public void internalFrameDeactivated(InternalFrameEvent e) {
                }
            });
            dpMain.add(homeFrm);
            homeFrm.setSize(dpMain.getWidth(), dpMain.getHeight());
            homeFrm.setVisible(true);
        } else {
            homeFrm.setVisible(true);
        }
    }//GEN-LAST:event_btnHomeActionPerformed

    private void mnuLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuLogoutActionPerformed
        this.setAlwaysOnTop(true);
        closeAllFrm();
        if (mnuLogout.getText().equals("Đăng Xuất")) {
            Auth.nguoiDungHienTai = null;
            statusBtn();
            btnHomeActionPerformed(null);
            return;
        }
        
        if (logInFrm == null || logInFrm.isClosed()) {
            logInFrm = new LogInFrm();
            closeAllFrm();
            logInFrm.addInternalFrameListener(new InternalFrameListener() {
                @Override
                public void internalFrameOpened(InternalFrameEvent e) {
                    statusBtn();
                    
                }

                @Override
                public void internalFrameClosing(InternalFrameEvent e) {
                }

                @Override
                public void internalFrameClosed(InternalFrameEvent e) {
                    if (ForgotPassFrm.frmForgot == 2) {
                        if (frmForgot == null || frmForgot.isClosed()) {
                            frmForgot = new ForgotPassFrm();
                            frmForgot.addInternalFrameListener(new InternalFrameListener() {
                                @Override
                                public void internalFrameOpened(InternalFrameEvent e) {
                                }

                                @Override
                                public void internalFrameClosing(InternalFrameEvent e) {

                                }

                                @Override
                                public void internalFrameClosed(InternalFrameEvent e) {
                                    if (LogInFrm.frmLogIn == 2) {
                                        mnuChangePassActionPerformed(null);
                                        LogInFrm.frmLogIn = 0;
                                    }
                                }

                                @Override
                                public void internalFrameIconified(InternalFrameEvent e
                                ) {
                                }

                                @Override
                                public void internalFrameDeiconified(InternalFrameEvent e
                                ) {
                                }

                                @Override
                                public void internalFrameActivated(InternalFrameEvent e
                                ) {
                                }

                                @Override
                                public void internalFrameDeactivated(InternalFrameEvent e
                                ) {
                                }
                            });
                            frmForgot.setLocation(dpMain.getWidth() / 2 - frmForgot.getWidth() / 2,
                                    dpMain.getHeight() / 2 - frmForgot.getHeight() / 2);
                            dpMain.add(frmForgot);

                            frmForgot.setVisible(
                                    true);
                        }
                    }

                    if (LogInFrm.frmLogIn == 0) {
                        mnuLogout.setText("Đăng Xuất");
                        
                        btnHomeActionPerformed(null);
                    }

                    
                    if (LogInFrm.qrCode1 == 1) {

                        if (frmQR == null || frmQR.isClosed()) {
                            frmQR = new QRCodeFrm();

                            frmQR.addInternalFrameListener(new InternalFrameListener() {
                                @Override
                                public void internalFrameOpened(InternalFrameEvent e) {
                                }

                                @Override
                                public void internalFrameClosing(InternalFrameEvent e) {
                                }

                                @Override
                                public void internalFrameClosed(InternalFrameEvent e) {
                                    if (frmQR.qrCode == 1) {
                                        btnHomeActionPerformed(null);
                                    }
                                    statusBtn();
                                    
                                }

                                @Override
                                public void internalFrameIconified(InternalFrameEvent e) {
                                }

                                @Override
                                public void internalFrameDeiconified(InternalFrameEvent e) {
                                }

                                @Override
                                public void internalFrameActivated(InternalFrameEvent e) {
                                }

                                @Override
                                public void internalFrameDeactivated(InternalFrameEvent e) {
                                }
                            });
//                                            frmQR.setSize(900, 900);
                            frmQR.setLocation(dpMain.getWidth() / 2 - frmQR.getWidth() / 2,
                                    dpMain.getHeight() / 2 - frmQR.getHeight() / 2);
                            dpMain.add(frmQR);

                            frmQR.setVisible(
                                    true);
                        } else {
                            frmQR.setVisible(
                                    true);
                        }
                    }
                    statusBtn();
                }

                @Override
                public void internalFrameIconified(InternalFrameEvent e
                ) {
                }

                @Override
                public void internalFrameDeiconified(InternalFrameEvent e
                ) {
                }

                @Override
                public void internalFrameActivated(InternalFrameEvent e
                ) {
                    mnuLogout.setText("Đăng Nhập");
                    mnuLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/log-in.png")));
                }

                @Override
                public void internalFrameDeactivated(InternalFrameEvent e
                ) {
                }
            });
            logInFrm.setLocation(dpMain.getWidth() / 2 - logInFrm.getWidth() / 2,
                    dpMain.getHeight() / 2 - logInFrm.getHeight() / 2);

            dpMain.add(logInFrm);

            logInFrm.setVisible(
                    true);
        } else {
            logInFrm.setVisible(true);
        }
        if (logInFrm.isClosed()) {
            btnHomeActionPerformed(null);
        }
        statusBtn();
    }//GEN-LAST:event_mnuLogoutActionPerformed

    private void mnuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExitActionPerformed
        if (!MyMess.question(this, "Bạn muốn thoát chương trình?")) {
            return;
        }
    }//GEN-LAST:event_mnuExitActionPerformed

    private void mnuChangePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuChangePassActionPerformed
        LogInFrm.frmLogIn = 0;

        closeAllFrm();
        this.setAlwaysOnTop(true);
        if (changeFrm == null || changeFrm.isClosed()) {
            if (LogInFrm.frmLogIn == 2) {
                changeFrm = new ChangePassFrm(false);
            } else {
                changeFrm = new ChangePassFrm(true);
            }
            changeFrm.addInternalFrameListener(new InternalFrameListener() {
                @Override
                public void internalFrameOpened(InternalFrameEvent e) {
                }

                @Override
                public void internalFrameClosing(InternalFrameEvent e) {

                }

                @Override
                public void internalFrameClosed(InternalFrameEvent e) {
                    if (ChangePassFrm.changePass == 1) {
                        mnuLogoutActionPerformed(null);
                    }
                }

                @Override
                public void internalFrameIconified(InternalFrameEvent e) {
                }

                @Override
                public void internalFrameDeiconified(InternalFrameEvent e) {
                }

                @Override
                public void internalFrameActivated(InternalFrameEvent e) {
                }

                @Override
                public void internalFrameDeactivated(InternalFrameEvent e) {
                }
            });
            dpMain.add(changeFrm);
            changeFrm.setLocation(dpMain.getWidth() / 2 - changeFrm.getWidth() / 2, dpMain.getHeight() / 2 - changeFrm.getHeight() / 2);
            changeFrm.setVisible(true);
        } else {
            changeFrm.setVisible(true);
        }

    }//GEN-LAST:event_mnuChangePassActionPerformed

    private void mnuCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCDActionPerformed
        closeAllFrm();
        this.setAlwaysOnTop(true);
        if (qLCDFrm == null || qLCDFrm.isClosed()) {
            qLCDFrm = new QLCDFrm();
            qLCDFrm.setSize(dpMain.getWidth(), dpMain.getHeight());
            dpMain.add(qLCDFrm);
            qLCDFrm.setVisible(true);
        } else {
            qLCDFrm.setVisible(true);
        }
    }//GEN-LAST:event_mnuCDActionPerformed

    private void mnuKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuKHActionPerformed
        closeAllFrm();
        this.setAlwaysOnTop(true);
        if (qLKHFrm == null || qLKHFrm.isClosed()) {
            qLKHFrm = new QLKHFrm();
            qLKHFrm.setSize(dpMain.getWidth(), dpMain.getHeight());
            dpMain.add(qLKHFrm);
            qLKHFrm.setVisible(true);
        } else {
            qLKHFrm.setVisible(true);
        }
    }//GEN-LAST:event_mnuKHActionPerformed

    private void mnuNHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuNHActionPerformed
        closeAllFrm();
        this.setAlwaysOnTop(true);
        if (qLNHFrm == null || qLNHFrm.isClosed()) {
            qLNHFrm = new QLNHFrm();
            qLNHFrm.setSize(dpMain.getWidth(), dpMain.getHeight());
            dpMain.add(qLNHFrm);
            qLNHFrm.setVisible(true);
        } else {
            qLNHFrm.setVisible(true);
        }
    }//GEN-LAST:event_mnuNHActionPerformed

    private void mnuHVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuHVActionPerformed
        closeAllFrm();
        this.setAlwaysOnTop(true);
        if (qLHVFrm == null || qLHVFrm.isClosed()) {
            qLHVFrm = new QLHVFrm();
            dpMain.add(qLHVFrm);
            qLHVFrm.setSize(dpMain.getWidth(), dpMain.getHeight());
            qLHVFrm.setVisible(true);
        } else {
            qLHVFrm.setVisible(true);
        }
    }//GEN-LAST:event_mnuHVActionPerformed

    private void mnuNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuNVActionPerformed
        closeAllFrm();
        this.setAlwaysOnTop(true);
        if (qLNVFrm == null || qLNVFrm.isClosed()) {
            qLNVFrm = new QLNVFrm();
            dpMain.add(qLNVFrm);
            qLNVFrm.setSize(dpMain.getWidth(), dpMain.getHeight());
            qLNVFrm.setVisible(true);
        } else {
            qLNVFrm.setVisible(true);
        }
    }//GEN-LAST:event_mnuNVActionPerformed

    private void btnQLNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLNhanVienActionPerformed
        // TODO add your handling code here:
        mnuNVActionPerformed(null);
    }//GEN-LAST:event_btnQLNhanVienActionPerformed

    private void btnQLCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLCDActionPerformed
        // TODO add your handling code here:
        mnuCDActionPerformed(null);
    }//GEN-LAST:event_btnQLCDActionPerformed

    private void btnQLHVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLHVActionPerformed
        // TODO add your handling code here:
        mnuHVActionPerformed(null);
    }//GEN-LAST:event_btnQLHVActionPerformed

    private void btnQLKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLKHActionPerformed
        // TODO add your handling code here:
        mnuKHActionPerformed(null);
    }//GEN-LAST:event_btnQLKHActionPerformed

    private void btnQLNHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQLNHActionPerformed
        // TODO add your handling code here:
        mnuNHActionPerformed(null);
    }//GEN-LAST:event_btnQLNHActionPerformed

    private void btnBCTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBCTKActionPerformed
        // TODO add your handling code here:
        closeAllFrm();
        this.setAlwaysOnTop(true);
        if (frmStatis == null || frmStatis.isClosed()) {
            frmStatis = new StatisticalFrm();
            dpMain.add(frmStatis);
            frmStatis.setSize(dpMain.getWidth(), dpMain.getHeight());
            frmStatis.setVisible(true);
        } else {
            frmStatis.setVisible(true);
        }
    }//GEN-LAST:event_btnBCTKActionPerformed

    private void mnuBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuBDActionPerformed
        // TODO add your handling code here:
        closeAllFrm();
        this.setAlwaysOnTop(true);
        if (frmStatis == null || frmStatis.isClosed()) {
            frmStatis = new StatisticalFrm();
            dpMain.add(frmStatis);
            frmStatis.setSize(dpMain.getWidth(), dpMain.getHeight());
            frmStatis.selectTab(0);
            frmStatis.setVisible(true);
        } else {
            frmStatis.selectTab(0);
            frmStatis.setVisible(true);
        }
    }//GEN-LAST:event_mnuBDActionPerformed

    private void mnuLuNHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuLuNHActionPerformed
        // TODO add your handling code here:
        closeAllFrm();
        this.setAlwaysOnTop(true);
        if (frmStatis == null || frmStatis.isClosed()) {
            frmStatis = new StatisticalFrm();
            dpMain.add(frmStatis);
            frmStatis.setSize(dpMain.getWidth(), dpMain.getHeight());
            frmStatis.selectTab(1);
            frmStatis.setVisible(true);
        } else {
            frmStatis.setVisible(true);
        }
    }//GEN-LAST:event_mnuLuNHActionPerformed

    private void mnuDCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuDCDActionPerformed
        // TODO add your handling code here:
        closeAllFrm();
        this.setAlwaysOnTop(true);
        if (frmStatis == null || frmStatis.isClosed()) {
            frmStatis = new StatisticalFrm();
            dpMain.add(frmStatis);
            frmStatis.setSize(dpMain.getWidth(), dpMain.getHeight());
            frmStatis.selectTab(2);
            frmStatis.setVisible(true);
        } else {
            frmStatis.setVisible(true);
        }
    }//GEN-LAST:event_mnuDCDActionPerformed

    private void mnuDTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuDTActionPerformed
        // TODO add your handling code here:
        closeAllFrm();
        this.setAlwaysOnTop(true);
        if (frmStatis == null || frmStatis.isClosed()) {
            frmStatis = new StatisticalFrm();
            dpMain.add(frmStatis);
            frmStatis.setSize(dpMain.getWidth(), dpMain.getHeight());
            frmStatis.selectTab(3);
            frmStatis.setVisible(true);
        } else {
            frmStatis.setVisible(true);
        }
    }//GEN-LAST:event_mnuDTActionPerformed

    private void mnuGioiThieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuGioiThieuActionPerformed
        // TODO add your handling code here:
        closeAllFrm();
        this.setAlwaysOnTop(true);
        if (frmInfo == null || frmInfo.isClosed()) {
            frmInfo = new InfoFrm();
            dpMain.add(frmInfo);
            frmInfo.setSize(dpMain.getWidth(), dpMain.getHeight());
            frmInfo.setVisible(true);
        } else {
            frmInfo.setVisible(true);
        }
    }//GEN-LAST:event_mnuGioiThieuActionPerformed

    private void mnuQRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuQRActionPerformed
        // TODO add your handling code here:
        final String username = "sendmail.fpttext@gmail.com";
        final String password = "sendmail.fpttext10";
        // Assuming you are sending email through relay.jangosmtp.net
        Properties prop = new Properties();
        prop.put("mail.smtp.host", "smtp.gmail.com");
        prop.put("mail.smtp.port", "587");
        prop.put("mail.smtp.auth", "true");
        prop.put("mail.smtp.starttls.enable", "true"); //TLS

        Session session = Session.getInstance(prop,
                new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
        });
        try {

            ByteArrayOutputStream out = QRCode.from(Auth.nguoiDungHienTai.getMaNV())
                    .to(ImageType.PNG).stream();

            String f_name = Auth.nguoiDungHienTai.getMaNV();
            String Path_name = "./qrCode/";

            FileOutputStream fout = new FileOutputStream(new File(Path_name + (f_name + ".PNG")));
            fout.write(out.toByteArray());
            fout.flush();

        } catch (Exception e) {
        }
        try {

            // Create a default MimeMessage object.
            Message message = new MimeMessage(session);

            // Set From: header field of the header.
            message.setFrom(new InternetAddress("sendmail.fpttext@gmail.com"));

            // Set To: header field of the header.
            message.setRecipients(Message.RecipientType.TO,
                    InternetAddress.parse(Auth.nguoiDungHienTai.getEmail()));

            // Set Subject: header field
            message.setSubject("Testing Subject");

            // This mail has 2 part, the BODY and the embedded image
            MimeMultipart multipart = new MimeMultipart("related");

            // first part (the html)
            BodyPart messageBodyPart = new MimeBodyPart();
            String htmlText = "<H1>Your QR_CODE</H1><img src=\"cid:image\">";
            messageBodyPart.setContent(htmlText, "text/html");
            // add it
            multipart.addBodyPart(messageBodyPart);

            // second part (the image)
            messageBodyPart = new MimeBodyPart();
            DataSource fds = new FileDataSource(
                    "./qrCode/" + Auth.nguoiDungHienTai.getMaNV() + ".png");

            messageBodyPart.setDataHandler(new DataHandler(fds));
            messageBodyPart.setHeader("Content-ID", "<image>");

            // add image to the multipart
            multipart.addBodyPart(messageBodyPart);

            // put everything together
            message.setContent(multipart);
            // Send message
            Transport.send(message);

            MyMess.msgTrue(this, "Chúng tôi đã gửi 1 mã QR Code vào email của bạn \n "
                    + "Hãy sử dụng nó để đăng nhập lần sau");

        } catch (MessagingException e) {
            e.printStackTrace();
            MyMess.msgFalse(this, "Không thể gửi mail vui lòng kiểm tra đường truyền!");
        }
    }//GEN-LAST:event_mnuQRActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar MnuBar;
    private javax.swing.JMenu MnuHeThong;
    private javax.swing.JMenu MnuTroGiup;
    private javax.swing.JButton btnBCTK;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnQLCD;
    private javax.swing.JButton btnQLHV;
    private javax.swing.JButton btnQLKH;
    private javax.swing.JButton btnQLNH;
    private javax.swing.JButton btnQLNhanVien;
    private javax.swing.JDesktopPane dpMain;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator10;
    private javax.swing.JPopupMenu.Separator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    private javax.swing.JLabel lblClock;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblRule;
    private javax.swing.JMenuItem mnuBD;
    private javax.swing.JMenuItem mnuCD;
    private javax.swing.JMenuItem mnuChangePass;
    private javax.swing.JMenuItem mnuDCD;
    private javax.swing.JMenuItem mnuDT;
    private javax.swing.JMenuItem mnuExit;
    private javax.swing.JMenuItem mnuGioiThieu;
    private javax.swing.JMenuItem mnuHV;
    private javax.swing.JMenuItem mnuHuongDan;
    private javax.swing.JMenuItem mnuKH;
    private javax.swing.JMenuItem mnuLogout;
    private javax.swing.JMenuItem mnuLuNH;
    private javax.swing.JMenuItem mnuNH;
    private javax.swing.JMenuItem mnuNV;
    private javax.swing.JMenuItem mnuQR;
    private javax.swing.JMenu mnuQuanLy;
    private javax.swing.JMenu mnuThongKe;
    // End of variables declaration//GEN-END:variables

    private void init() {
        hello = new HelloScreenFrm(this, true);
        hello.setVisible(true);
        mnuLogoutActionPerformed(null);
        this.setIconImage(ImageHelper.getAppIcon());

        startDongHo();
        mouseHover();
    }

    private void startDongHo() {
        //Hiển thị đồng hồ        
        new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date now = new Date();
                SimpleDateFormat fm1 = new SimpleDateFormat("dd/MM/yyyy");
                SimpleDateFormat fm = new SimpleDateFormat("hh:mm:ss a");
                String txt1 = fm1.format(now);
                lblDate.setText(txt1);
                String txt = fm.format(now);
                lblClock.setText(txt);
            }
        }).start();
    }

    private void statusBtn() {
        lblRule.setText(Auth.nguoiDungHienTai == null ? "Hãy Đăng Nhập Để Sử Dụng"
                            : (Auth.isManager() ? "Trưởng Phòng: " + Auth.nguoiDungHienTai.getHoTen()
                                    : "Nhân Viên: " + Auth.nguoiDungHienTai.getHoTen()));
        if (Auth.nguoiDungHienTai == null) {
            mnuLogout.setText("Đăng Nhập");
            mnuLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/log-in.png")));
            mnuQR.setEnabled(false);
            mnuQuanLy.setEnabled(false);
            mnuThongKe.setEnabled(false);
            btnBCTK.setEnabled(false);
            btnQLCD.setEnabled(false);
            btnQLHV.setEnabled(false);
            btnQLKH.setEnabled(false);
            btnQLNH.setEnabled(false);
            btnQLNhanVien.setEnabled(false);
            mnuChangePass.setEnabled(false);

        } else {
            mnuLogout.setText("Đăng Xuất");
            mnuLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout.png")));
            mnuQuanLy.setEnabled(true);
            mnuQR.setEnabled(true);
            mnuThongKe.setEnabled(true);
            btnBCTK.setEnabled(true);
            btnQLCD.setEnabled(true);
            btnQLHV.setEnabled(true);
            btnQLKH.setEnabled(true);
            btnQLNH.setEnabled(true);
            btnQLNhanVien.setEnabled(true);
            mnuChangePass.setEnabled(true);
        }
        if (!Auth.isManager()) {
            btnQLNhanVien.setEnabled(false);
            mnuNV.setEnabled(false);
            mnuDT.setEnabled(false);
        } else {
            mnuDT.setEnabled(true);
            mnuNV.setEnabled(true);
        }
    }

    private void closeAllFrm() {
        // TODO add your handling code here:
        for (JInternalFrame frame : dpMain.getAllFrames()) {
            frame.dispose();
        }
    }

    private void mouseHover() {
        //Hiệu ứng di chuột vào các button menu
        JButton[] btns = {btnHome, btnQLNhanVien, btnQLCD, btnQLNH, btnQLKH, btnQLHV, btnBCTK};
        for (JButton btn : btns) {

            btn.setBackground(new Color(255, 255, 255));
//            btn.setUI(new BasicButtonUI());
            btn.addMouseListener(new MouseListener() {
                @Override
                public void mouseClicked(java.awt.event.MouseEvent e) {
                                        
                }

                @Override
                public void mousePressed(java.awt.event.MouseEvent e) {
                }

                @Override
                public void mouseReleased(java.awt.event.MouseEvent e) {
                }

                @Override
                public void mouseEntered(java.awt.event.MouseEvent e) {
                    btn.setBackground(new Color(204,255,255));
                    btn.setVerticalTextPosition(1);
//                    btn.setVerticalAlignment(3);
                    if (btn == btnHome) {
                        btn.setText("Trang Chủ");
                    } else if (btn == btnQLCD) {
                        btn.setText("Chuyên Đề");
                    } else if (btn == btnQLHV) {
                        btn.setText("Học Viên");
                    } else if (btn == btnQLKH) {
                        btn.setText("Khoá Học");
                    } else if (btn == btnQLNH) {
                        btn.setText("Người Học");
                    } else if (btn == btnQLNhanVien) {
                        btn.setText("Nhân Viên");
                    } else if (btn == btnBCTK) {
                        btn.setText("Thống Kê");
                    }
                }

                @Override
                public void mouseExited(java.awt.event.MouseEvent e) {
                    btn.setBackground(new Color(255, 255, 255));
//                    btn.setVerticalAlignment(2);
                    if (btn == btnHome) {
                        btn.setText("");
                    } else if (btn == btnQLCD) {
                        btn.setText("");
                    } else if (btn == btnQLHV) {
                        btn.setText("");
                    } else if (btn == btnQLKH) {
                        btn.setText("");
                    } else if (btn == btnQLNH) {
                        btn.setText("");
                    } else if (btn == btnQLNhanVien) {
                        btn.setText("");
                    } else if (btn == btnBCTK) {
                        btn.setText("");
                    }
                }
            });
        }
    }

//    private void setBBtn() {
//        
//        if(!qLNVFrm.isClosed()) {
//            btnQLNhanVien.setBackground(new Color(204,204,204));
//        }else {
//            btnQLNhanVien.setBackground(new Color(250, 250, 250));
//        }
//        if(!qLCDFrm.isClosed()) {
//            btnQLCD.setBackground(new Color(204,204,204));
//        }else {
//            btnQLCD.setBackground(new Color(250, 250, 250));
//        }
//        if(!qLHVFrm.isClosed()) {
//            btnQLHV.setBackground(new Color(204,204,204));
//        }else {
//            btnQLHV.setBackground(new Color(250, 250, 250));
//        }
//        if(!qLKHFrm.isClosed()) {
//            btnQLKH.setBackground(new Color(204,204,204));
//        }else {
//            btnQLKH.setBackground(new Color(250, 250, 250));
//        }
//        if(!qLNHFrm.isClosed()) {
//            btnQLNH.setBackground(new Color(204,204,204));
//        }else {
//            btnQLNH.setBackground(new Color(250, 250, 250));
//        }
//        if(!homeFrm.isClosed()) {
//            btnHome.setBackground(new Color(204,204,204));
//        }else {
//            btnHome.setBackground(new Color(250, 250, 250));
//        }
//        
//        if(!frmStatis.isClosed()) {
//            btnBCTK.setBackground(new Color(204,204,204));
//        }else {
//            btnBCTK.setBackground(new Color(250, 250, 250));
//        }
//        
//    }
}
