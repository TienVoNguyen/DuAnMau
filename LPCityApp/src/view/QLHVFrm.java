/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Color;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.table.DefaultTableModel;
import mydao.CDDao;
import mydao.HVDao;
import mydao.KHDao;
import mydao.NHDao;
import myentity.ChuyenDe;
import myentity.HocVien;
import myentity.KhoaHoc;
import myentity.NguoiHoc;
import xhelper.Auth;
import xhelper.MyMess;

/**
 *
 * @author NTV
 */
public class QLHVFrm extends javax.swing.JInternalFrame {

    private CDDao cddao;
    private KHDao khdao;
    private NHDao nhdao;
    private HVDao hvdao;

    /**
     * Creates new form QLHVFrm
     */
    public QLHVFrm() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        cbxCD = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        cbxKH = new javax.swing.JComboBox<>();
        tabs = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHV = new javax.swing.JTable();
        btnDeleteKH = new javax.swing.JButton();
        btnUpdateDiem = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblNH = new javax.swing.JTable();
        btnAddInKH = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setResizable(true);
        setTitle("QUẢN LÝ HỌC VIÊN");
        setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chuyên Đề", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(0, 51, 255))); // NOI18N
        jPanel2.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        cbxCD.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbxCD.setMinimumSize(new java.awt.Dimension(0, 0));
        cbxCD.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxCDItemStateChanged(evt);
            }
        });
        jPanel2.add(cbxCD);

        jPanel1.add(jPanel2);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Khoá Học", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(51, 102, 255))); // NOI18N
        jPanel3.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        cbxKH.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbxKH.setMinimumSize(new java.awt.Dimension(0, 0));
        cbxKH.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxKHItemStateChanged(evt);
            }
        });
        jPanel3.add(cbxKH);

        jPanel1.add(jPanel3);

        tabs.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tabs.setMinimumSize(new java.awt.Dimension(0, 0));

        tblHV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblHV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Thứ Tự", "Mã Học Viên", "Mã Người Học", "Họ Và Tên", "Điểm"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHV.setRowHeight(24);
        jScrollPane1.setViewportView(tblHV);

        btnDeleteKH.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDeleteKH.setText("Xoá khỏi khoá học");
        btnDeleteKH.setMinimumSize(new java.awt.Dimension(0, 0));
        btnDeleteKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteKHActionPerformed(evt);
            }
        });

        btnUpdateDiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnUpdateDiem.setText("Cập nhật điểm");
        btnUpdateDiem.setMinimumSize(new java.awt.Dimension(0, 0));
        btnUpdateDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateDiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1173, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDeleteKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdateDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDeleteKH, btnUpdateDiem});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDeleteKH, btnUpdateDiem});

        tabs.addTab("Học Viên", jPanel4);

        txtSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearch.setMinimumSize(new java.awt.Dimension(0, 0));

        btnSearch.setBackground(new java.awt.Color(255, 255, 255));
        btnSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.jpg"))); // NOI18N
        btnSearch.setText("Tìm kiếm");
        btnSearch.setIconTextGap(10);
        btnSearch.setMinimumSize(new java.awt.Dimension(0, 0));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnSearch, txtSearch});

        tblNH.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblNH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Thứ tự", "Mã Người Học", "Họ Và Tên", "Giới Tính", "Ngày Sinh", "Điện Thoại", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNH.setRowHeight(24);
        jScrollPane2.setViewportView(tblNH);

        btnAddInKH.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAddInKH.setText("Thêm vào khoá học");
        btnAddInKH.setActionCommand("");
        btnAddInKH.setMinimumSize(new java.awt.Dimension(0, 0));
        btnAddInKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddInKHActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1173, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddInKH, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnAddInKH, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tabs.addTab("Người Học", jPanel5);

        jPanel7.setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 102, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ HỌC VIÊN");
        jLabel1.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel7.add(jLabel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateDiemActionPerformed
        // TODO add your handling code here:
        if (!sua()) {
            MyMess.msgTrue(this, "Cập nhật điểm thành công!");
        };
    }//GEN-LAST:event_btnUpdateDiemActionPerformed

    private void btnDeleteKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteKHActionPerformed
        // TODO add your handling code here:
        xoa();
    }//GEN-LAST:event_btnDeleteKHActionPerformed

    private void btnAddInKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddInKHActionPerformed
        // TODO add your handling code here:
        them();
    }//GEN-LAST:event_btnAddInKHActionPerformed

    private void cbxCDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxCDItemStateChanged
        // TODO add your handling code here:
        this.loadDataToCBBKH();
    }//GEN-LAST:event_cbxCDItemStateChanged

    private void cbxKHItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxKHItemStateChanged
        // TODO add your handling code here:
        this.loadDataToTableHV();
    }//GEN-LAST:event_cbxKHItemStateChanged

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        this.loadDataToTableNH();
    }//GEN-LAST:event_btnSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddInKH;
    private javax.swing.JButton btnDeleteKH;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdateDiem;
    private javax.swing.JComboBox<String> cbxCD;
    private javax.swing.JComboBox<String> cbxKH;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblHV;
    private javax.swing.JTable tblNH;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private void init() {
        cddao = new CDDao();
        hvdao = new HVDao();
        nhdao = new NHDao();
        khdao = new KHDao();
        loadDataToCBBCD();
        mouseHover();
    }

    private void loadDataToTableHV() {
        DefaultTableModel model = (DefaultTableModel) tblHV.getModel();
        model.setRowCount(0);
        KhoaHoc khoaHoc = (KhoaHoc) cbxKH.getSelectedItem();
        if (khoaHoc != null) {
            try {
                List<HocVien> lst = hvdao.selectByQuery("SELECTBYIDKH", khoaHoc.getMaKH());
                for (int i = 0; i < lst.size(); i++) {
                    HocVien get = lst.get(i);
                    String hoTen = nhdao.selectByID(get.getMaNH()).getHoTen();
                    model.addRow(new Object[]{
                        i + 1, get.getMaHV(), get.getMaNH(),
                        hoTen, get.getDiem()
                    });
                }
                this.loadDataToTableNH();
            } catch (Exception ex) {
                ex.printStackTrace();
                MyMess.msgFalse(this, "Lỗi truy vân");
            }
        }
    }

    private void loadDataToTableNH() {
        DefaultTableModel model = (DefaultTableModel) tblNH.getModel();
        model.setRowCount(0);
        KhoaHoc khoaHoc = (KhoaHoc) cbxKH.getSelectedItem();
        String keyword = "%" + txtSearch.getText() + "%";
        ArrayList<NguoiHoc> list = new ArrayList<>();

        try {
            list = nhdao.selectByQuery("SELECTBYQUERY", keyword, khoaHoc.getMaKH());
            if (list.isEmpty()) {
                return;
            }
            int i = 1;
            for (NguoiHoc nh : list) {
                model.addRow(new Object[]{
                    i, nh.getMaNH(), nh.getHoTen(), nh.isGioiTinh() ? "Nam" : "Nữ",
                    nh.getNgaySinh(), nh.getDienThoai(), nh.getEmail()
                });
                i++;
            }
        } catch (Exception ex) {
            MyMess.msgFalse(this, ex.getMessage());
            ex.printStackTrace();
        }
    }

    private void loadDataToCBBCD() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbxCD.getModel();
        model.removeAllElements();
        try {
            List<ChuyenDe> lst = new ArrayList<>();
            lst = cddao.selectALL();
            if (!lst.isEmpty()) {
                for (ChuyenDe cd : lst) {
                    model.addElement(cd);
                }
                this.loadDataToCBBKH();
            }
        } catch (Exception ex) {
            MyMess.msgFalse(this, "Lỗi truy vấn");
            ex.printStackTrace();
        }
    }

    private void loadDataToCBBKH() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbxKH.getModel();
        model.removeAllElements();
        try {
            ChuyenDe cd = (ChuyenDe) cbxCD.getSelectedItem();
            if (cd != null) {
                List<KhoaHoc> lst = this.khdao.selectByQuery("SELECTBYMACD", cd.getMaCD());
                if (!lst.isEmpty()) {
                    for (KhoaHoc kh : lst) {
                        model.addElement(kh);
                    }
                    this.loadDataToTableHV();
                }
            }

        } catch (Exception ex) {
            MyMess.msgFalse(this, "Lỗi truy vấn");
            ex.printStackTrace();
        }
    }

    private void them() {
        KhoaHoc khoaHoc = (KhoaHoc) cbxKH.getSelectedItem();
        int[] rows = tblNH.getSelectedRows();
        for (int row : rows) {
            HocVien hv = new HocVien();
            if(khoaHoc == null) {
                MyMess.msgWarning(this, "Chưa có khoá học để thêm học viên \n Hãy thêm khoá học cho chuyên đề này");
                return;
            }
            hv.setMaKH(khoaHoc.getMaKH());
            hv.setDiem(0);
            hv.setMaNH((String) tblNH.getValueAt(row, 1));
            try {
                hvdao.insert(hv);

//                MyMess.msgTrue(this, "Thêm thành công!");
            } catch (Exception ex) {
                MyMess.msgFalse(this, "Lỗi");
                ex.printStackTrace();
            }
        }
        this.loadDataToTableHV();
        this.tabs.setSelectedIndex(0);
    }

    private void xoa() {
        if (!Auth.isManager()) {
            MyMess.msgWarning(this, "Bạn không có quyền xoá học viên!");
        } else if (!MyMess.question(this, "Bạn có muốn xoá các học viên được chọn?")) {
            int[] rows = tblHV.getSelectedRows();
            for (int row : rows) {
                int mahv = (Integer) tblHV.getValueAt(row, 1);
                try {
                    if (hvdao.delete(mahv)) {
                        MyMess.msgTrue(this, "Xoá Thành Công");
                        this.loadDataToTableHV();
                    } else {
                        MyMess.msgWarning(this, "Xoá không thành công ");
                    }
                } catch (Exception ex) {
                    MyMess.msgFalse(this, "Lỗi");
                    ex.printStackTrace();
                }
            }
        }
    }

    private boolean sua() {
        for (int i = 0; i < tblHV.getRowCount(); i++) {
            int mahv = Integer.parseInt(tblHV.getValueAt(i, 1).toString());
            try {
                HocVien hv = hvdao.selectByID(mahv);
                hv.setDiem(Float.parseFloat(tblHV.getValueAt(i, 4).toString()));
                String Number = tblHV.getValueAt(i, 4).toString();
                String pattern = "[0-9]{1}[.]{0,1}[0-9]{0,1}";
                if (!Number.matches(pattern)) {
                    MyMess.msgFalse(this, "Mời nhập đúng định dạng điểm");
                    return true;
                }
                if (Double.parseDouble(Number) < 0 | Double.parseDouble(Number) > 10) {
                    MyMess.msgFalse(this, "Điểm phải >= 0 và Điểm <= 10)");
                    return true;
                }
                String pattern2 = "[0-9]{1}[.]{1}";
                if (Number.matches(pattern2)) {
                    MyMess.msgFalse(this, "Mời nhập đúng định dạng điểm");
                    return true;
                }

                hvdao.update(hv);

            } catch (Exception ex) {
                ex.printStackTrace();
                return true;
            }

        }
        return false;
    }
    
    private void mouseHover() {
        //Hiệu ứng di chuột vào các button menu
        JButton[] btns = {btnAddInKH, btnDeleteKH, btnSearch, btnUpdateDiem};
        for (JButton btn : btns) {

            btn.setBackground(new Color(255, 255, 255));
//            btn.setUI(new BasicButtonUI());
            btn.addMouseListener(new MouseListener() {
                @Override
                public void mouseClicked(java.awt.event.MouseEvent e) {
                                        
                }

                @Override
                public void mousePressed(java.awt.event.MouseEvent e) {
                }

                @Override
                public void mouseReleased(java.awt.event.MouseEvent e) {
                }

                @Override
                public void mouseEntered(java.awt.event.MouseEvent e) {
                    btn.setBackground(new Color(204,255,255));
//                    btn.setVerticalTextPosition(1);
//                    btn.setVerticalAlignment(3);
//                    if (btn == btnHome) {
//                        btn.setText("Trang Chủ");
//                    } else if (btn == btnQLCD) {
//                        btn.setText("Chuyên Đề");
//                    } else if (btn == btnQLHV) {
//                        btn.setText("Học Viên");
//                    } else if (btn == btnQLKH) {
//                        btn.setText("Khoá Học");
//                    } else if (btn == btnQLNH) {
//                        btn.setText("Người Học");
//                    } else if (btn == btnQLNhanVien) {
//                        btn.setText("Nhân Viên");
//                    } else if (btn == btnBCTK) {
//                        btn.setText("Thống Kê");
//                    }
                }

                @Override
                public void mouseExited(java.awt.event.MouseEvent e) {
                    btn.setBackground(new Color(255, 255, 255));
//                    btn.setVerticalAlignment(2);
//                    if (btn == btnHome) {
//                        btn.setText("");
//                    } else if (btn == btnQLCD) {
//                        btn.setText("");
//                    } else if (btn == btnQLHV) {
//                        btn.setText("");
//                    } else if (btn == btnQLKH) {
//                        btn.setText("");
//                    } else if (btn == btnQLNH) {
//                        btn.setText("");
//                    } else if (btn == btnQLNhanVien) {
//                        btn.setText("");
//                    } else if (btn == btnBCTK) {
//                        btn.setText("");
//                    }
                }
            });
        }
    }
}
