/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import MyInterface.BaseDaoInterface;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import mydao.NVDao;
import myentity.NhanVien;
import xhelper.Auth;
import xhelper.MyMess;
import xhelper.MyValidate;

/**
 *
 * @author NTV
 */
public class LogInFrm extends javax.swing.JInternalFrame {

    private String rememberUser = "";
    private String rememberPass = "";
    private NhanVien rememberNV;
    private String path = "ListAccount.dat";
    private BaseDaoInterface dao;
    private int SLDangNhapSai = 0;
    static int frmLogIn = 0;

    /**
     * Creates new form LogInFrm
     */
    public LogInFrm() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtIDNV = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMK = new javax.swing.JPasswordField();
        chkSaveUser = new javax.swing.JCheckBox();
        lblForgotPass = new javax.swing.JLabel();
        btnLogIn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();

        setTitle("Đăng nhập hệ thống quản lý");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Tên tài khoản:");

        txtIDNV.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtIDNV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDNVKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Mật khẩu:");

        txtMK.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtMK.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMKKeyPressed(evt);
            }
        });

        chkSaveUser.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        chkSaveUser.setForeground(new java.awt.Color(255, 0, 0));
        chkSaveUser.setText("Ghi nhớ tài khoản?");

        lblForgotPass.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblForgotPass.setForeground(new java.awt.Color(255, 0, 0));
        lblForgotPass.setText("Quên mật khẩu?");
        lblForgotPass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblForgotPassMouseClicked(evt);
            }
        });

        btnLogIn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnLogIn.setText("Đăng nhập");
        btnLogIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogInActionPerformed(evt);
            }
        });
        btnLogIn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnLogInKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logo-small_1.png"))); // NOI18N
        jLabel5.setText("DESIGNING YOUR LIFE");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnExit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnExit.setText("Thoát");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(txtIDNV)
                    .addComponent(txtMK)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(chkSaveUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLogIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(lblForgotPass, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(143, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(71, 71, 71)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtIDNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(20, 20, 20)
                .addComponent(txtMK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkSaveUser)
                    .addComponent(lblForgotPass))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLogIn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit))
                .addGap(62, 62, 62))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnExit, btnLogIn});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogInActionPerformed
        StringBuilder loi = new StringBuilder();//tạo biến chứa lỗi
        String taiKhoan = txtIDNV.getText();
        String matKhau = txtMK.getText();
        if (MyValidate.isEmpty(txtIDNV)) {
            loi.append("Nhập tên tài khoản\n");
        }
        if (MyValidate.isEmpty(txtMK)) {
            loi.append("Nhập mật khẩu tài khoản\n");
        }
        if (loi.toString().length() > 0) {
            MyMess.msgFalse(this, loi.toString());
            return;
        }
        //check tài khoản
        try {
            Auth.nguoiDungHienTai = (NhanVien) dao.selectByID(taiKhoan);
            if (Auth.nguoiDungHienTai == null) {
                loi.append("Bạn đã nhập Sai tài khoản!\n");
            } else if (Auth.nguoiDungHienTai.isTrangThai() == false) {
                loi.append("Tài khoản của bạn đã bị khoá\n");
            } else if (!matKhau.equals(Auth.nguoiDungHienTai.getMatKhau())) {
                this.SLDangNhapSai++;
                dao.update(Auth.nguoiDungHienTai);
                if (SLDangNhapSai >= 5) {
                    loi.append("Bạn đã nhập sai quá số lần quy định,"
                            + "\nTài khoản của bạn đã bị khóa!\n");
                    MyMess.msgFalse(this, loi.toString());
                    Auth.nguoiDungHienTai.setTrangThai(false);
                    dao.update(Auth.nguoiDungHienTai);
                    return;
                }
                loi.append("Bạn đã nhập Sai mật khẩu " + SLDangNhapSai + " Lần\n"
                        + "Nhập sai tối đa 5 lần tài khoản sẽ bị khoá!\n");
            }
            if (loi.toString().length() > 0) {
                MyMess.msgFalse(this, loi.toString());
                return;
            }
            SLDangNhapSai = 0;
            this.dispose();
        } catch (Exception ex) {
            loi.append(ex.getMessage());
            MyMess.msgWarning(this, loi.toString());
            return;
        }

        // lưu lại thông tin của người dùng nếu chọn "remember me?"
        if (chkSaveUser.isSelected() == true) {
            this.rememberUser = taiKhoan;
            this.rememberPass = matKhau;
        } else {
            this.rememberPass = "";
            this.rememberUser = "";
        }
        this.rememberNV.setMaNV(rememberUser);
        this.rememberNV.setMatKhau(rememberPass);
        try {
            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(path));
            oos.writeObject(rememberNV);
            oos.flush();
            oos.close();
        } catch (Exception e) {
            MyMess.msgFalse(this, e.getMessage());
        }
    }//GEN-LAST:event_btnLogInActionPerformed

    private void txtIDNVKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDNVKeyPressed
        // TODO add your handling code here:
        EnterAcctions(evt);
    }//GEN-LAST:event_txtIDNVKeyPressed

    private void txtMKKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMKKeyPressed
        // TODO add your handling code here:
        EnterAcctions(evt);
    }//GEN-LAST:event_txtMKKeyPressed

    private void btnLogInKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnLogInKeyPressed
        // TODO add your handling code here:
        EnterAcctions(evt);
    }//GEN-LAST:event_btnLogInKeyPressed

    private void lblForgotPassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblForgotPassMouseClicked
        // TODO add your handling code here:        
        ForgotPassFrm.frmForgot = 2;
        frmLogIn = 1;
        this.dispose();
    }//GEN-LAST:event_lblForgotPassMouseClicked

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        if (!MyMess.question(this, "Bạn có muốn thoát chương trình?")) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnExitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLogIn;
    private javax.swing.JCheckBox chkSaveUser;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblForgotPass;
    private javax.swing.JTextField txtIDNV;
    private javax.swing.JPasswordField txtMK;
    // End of variables declaration//GEN-END:variables

    private void init() {
        this.setResizable(false);
        //hiệu ứng di chuột vào quên mật khẩu    
            lblForgotPass.addMouseListener(new MouseListener() {
                @Override
                public void mouseClicked(MouseEvent e) {
                }

                @Override
                public void mousePressed(MouseEvent e) {
                }

                @Override
                public void mouseReleased(MouseEvent e) {
                }

                @Override
                public void mouseEntered(MouseEvent e) {                   
                        lblForgotPass.setForeground(new Color(0, 51, 255));                   
                }

                @Override
                public void mouseExited(MouseEvent e) {                    
                        lblForgotPass.setForeground(new Color(255, 0, 0));                    
                }
            });
            
            chkSaveUser.addMouseListener(new MouseListener() {
                @Override
                public void mouseClicked(MouseEvent e) {
                }

                @Override
                public void mousePressed(MouseEvent e) {
                }

                @Override
                public void mouseReleased(MouseEvent e) {
                }

                @Override
                public void mouseEntered(MouseEvent e) {                   
                        chkSaveUser.setForeground(new Color(0, 51, 255));                   
                }

                @Override
                public void mouseExited(MouseEvent e) {                    
                        chkSaveUser.setForeground(new Color(255, 0, 0));                    
                }
            });
        
        this.dao = new NVDao();
//        Auth.nguoiDungHienTai = new NhanVien();
        this.rememberNV = new NhanVien();
        //lấy ra tên tài khoản và mật khẩu đã được remember

        try {
            ObjectInputStream ois = new ObjectInputStream(new FileInputStream(path));
            this.rememberNV = (NhanVien) ois.readObject();
            this.rememberUser = this.rememberNV.getMaNV();
            this.rememberPass = this.rememberNV.getMatKhau();
            ois.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

        //gán tài khoản mật khẩu cho trường txtTaiKhoan & txtMatKhau
        this.txtIDNV.setText(this.rememberUser);
        this.txtMK.setText(this.rememberPass);
        //tích chọn cho chkGhiNhoTK
        this.chkSaveUser.setSelected(rememberUser.isEmpty() ? false : true);

    }

    private void EnterAcctions(KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnLogIn.doClick();
        }
    }
}
